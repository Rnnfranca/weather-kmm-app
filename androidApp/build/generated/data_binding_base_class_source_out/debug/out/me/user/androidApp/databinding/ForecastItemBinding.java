// Generated by view binder compiler. Do not edit!
package me.user.androidApp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.user.androidApp.R;

public final class ForecastItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView forecastDate;

  @NonNull
  public final ImageView forecastImage;

  @NonNull
  public final TextView forecastTempMax;

  @NonNull
  public final TextView forecastTempMin;

  private ForecastItemBinding(@NonNull LinearLayout rootView, @NonNull TextView forecastDate,
      @NonNull ImageView forecastImage, @NonNull TextView forecastTempMax,
      @NonNull TextView forecastTempMin) {
    this.rootView = rootView;
    this.forecastDate = forecastDate;
    this.forecastImage = forecastImage;
    this.forecastTempMax = forecastTempMax;
    this.forecastTempMin = forecastTempMin;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ForecastItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ForecastItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.forecast_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ForecastItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.forecast_date;
      TextView forecastDate = rootView.findViewById(id);
      if (forecastDate == null) {
        break missingId;
      }

      id = R.id.forecast_image;
      ImageView forecastImage = rootView.findViewById(id);
      if (forecastImage == null) {
        break missingId;
      }

      id = R.id.forecast_temp_max;
      TextView forecastTempMax = rootView.findViewById(id);
      if (forecastTempMax == null) {
        break missingId;
      }

      id = R.id.forecast_temp_min;
      TextView forecastTempMin = rootView.findViewById(id);
      if (forecastTempMin == null) {
        break missingId;
      }

      return new ForecastItemBinding((LinearLayout) rootView, forecastDate, forecastImage,
          forecastTempMax, forecastTempMin);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
